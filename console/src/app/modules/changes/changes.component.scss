@use '~@angular/material' as mat;

.change-header {
  display: flex;
  justify-content: space-between;
  align-items: center;

  .ch-header {
    display: block;
    margin-bottom: 1rem;
    font-weight: 400;
    margin-top: 1rem;
    font-size: 14px;
    letter-spacing: 0.05em;
    text-transform: uppercase;
  }

  .icon {
    font-size: 1.2rem;
  }
}

@mixin changes-theme($theme) {
  $is-dark-theme: map-get($theme, is-dark);
  $foreground: map-get($theme, foreground);

  .scroll-container {
    max-height: 50vh;
    overflow-y: scroll;
    border-bottom: 1px solid map-get($foreground, divider);
    margin-bottom: 0.5rem;

    .date {
      font-weight: 500;
      font-size: 0.8rem;
      display: block;
      margin-bottom: 0.5rem;
    }

    .item {
      display: block;
      padding: 10px 0;
      font-size: 0.8rem;

      .row {
        display: flex;
        flex-direction: row;

        .spacer {
          width: 32px;
        }

        .actions {
          flex: 1;
          display: flex;
          flex-direction: column;
          margin-top: -0.5rem;

          .action {
            display: flex;
            flex-direction: row;
            align-items: center;
            flex: 1;

            .icon {
              width: 32px;
              display: inline-block;
              height: 1.2rem;
              line-height: 1.2rem;
              font-size: 1.2rem;
              color: var(--grey);
            }

            span {
              flex: 1;
              font-weight: 500;
              font-size: 0.8rem;
              overflow-x: hidden;
            }

            .msg {
              text-overflow: ellipsis;
            }

            .block {
              display: block;
            }

            .restore {
              visibility: hidden;
              display: none;
              opacity: 0;
              margin-left: 1rem;
              transform: opacity 0.2s ease-in-out;
            }

            &:hover {
              .restore {
                visibility: visible;
                display: inline-block;
                opacity: 1;
                color: #81868a;

                &[disabled] {
                  visibility: hidden;
                }

                &:hover {
                  color: white;
                }
              }
            }
          }
        }

        /* stylelint-disable */
        $primary: map-get($theme, primary);
        $is-dark-theme: map-get($theme, is-dark);
        $transparent-color: if($is-dark-theme, rgba(#8795a1, 0.2), rgba(#8795a1, 0.2));

        /* stylelint-enable */

        &.change-item-back {
          background-color: rgba($transparent-color, 0.93);
          transition: background-color 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);
        }
      }

      .sp-wrapper {
        padding: 0.5rem;
        display: flex;
        justify-content: center;
      }
    }

    .end-container {
      font-size: 14px;
      margin: 1rem 0 1rem 0;
      display: block;
      color: var(--grey);
    }
  }
}
